Parameters:
  DatabaseName:
    Type: String
    Default: wordpress
  DatabaseUser:
    Type: String
    Default: wordpress
  DatabasePassword:
    Type: String
    Default: w0rdpr355
    NoEcho: true
Mappings:
  AWSRegions:
    ap-south-1:
      AMI: ami-02913db388613c3e1
      Instance: t2.micro
      DBInstance: db.t2.micro
    ap-southeast-1:
      AMI: ami-048a01c78f7bae4aa
      Instance: t2.micro
      DBInstance: db.t2.micro
    ap-southeast-2:
      AMI: ami-03ed5bd63ba378bd8
      Instance: t2.micro
      DBInstance: db.t2.micro
    ap-northeast-1:
      AMI: ami-0ab3e16f9c414dee7
      Instance: t2.micro
      DBInstance: db.t2.micro
    ap-east-1:
      AMI: ami-f8ee9589
      Instance: t3.micro
      DBInstance: db.t3.micro
Resources:
  DB:
    Type: "AWS::RDS::DBInstance"
    Properties:
      AllocatedStorage: 5
      StorageType: gp2
      DBInstanceClass: !FindInMap [AWSRegions, !Ref "AWS::Region", DBInstance] # Dynamic mapping + Pseudo Parameter
      DBName: !Ref DatabaseName
      Engine: MySQL
      MasterUsername: !Ref DatabaseUser
      MasterUserPassword: !Ref DatabasePassword
  EC2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: 
        Fn::FindInMap:
         - AWSRegions
         - !Ref AWS::Region
         - AMI
      InstanceType:  
        Fn::FindInMap:
         - AWSRegions
         - !Ref AWS::Region
         - Instance
# DependsOn is defined when there is dependency with other AWS Resources and you want to pause EC2 creation process. As there are some DB properties to be populated in UserData script, once DB is available required properties will be available. This will explicitly make sure EC2 will not be provisioned unless DB is created successfully.
#      DependsOn: DB
# Comment End for DependsOn
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash
            yum update -y
            yum install -y httpd24 php70 mysql56-server php70-mysqlnd
            chkconfig httpd on
            service httpd start
            cd /var/www/html
            wget https://wordpress.org/latest.tar.gz
            tar -zxvf latest.tar.gz --strip 1
            rm latest.tar.gz
            cp wp-config-sample.php wp-config.php
            sed -i 's/database_name_here/${DatabaseName}/g' wp-config.php
            sed -i 's/localhost/${DB.Endpoint.Address}/g' wp-config.php
            sed -i 's/username_here/${DatabaseUser}/g' wp-config.php
            sed -i 's/password_here/${DatabasePassword}/g' wp-config.php
      KeyName: aws-adminuser
  S3:
    Type: "AWS::S3::Bucket"
# As bucket name is static and must be unique globally. To create S3 bucket with unique name we need to comment below code. Hence, S3 Bucket will be unique globally.
#    Properties:
#      BucketName: wp-s3bucket18092019
# End